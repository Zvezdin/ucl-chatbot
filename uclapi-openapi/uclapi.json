{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "UCL API",
    "description" : "An API generated by a team of student developers to interact with student and university data at UCL",
    "contact" : {
      "name" : "API Support,",
      "email" : "isd.apiteam@ucl.ac.uk"
    },
    "version" : "1.0.0-oas3"
  },
  "components" : {
    "parameters" : {
      "token" : {
        "name" : "token",
        "in" : "query",
        "description" : "Authentication token",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "client_secret" : {
        "name" : "client_secret",
        "in" : "query",
        "description" : "Client secret of the authenticating app",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "roomname" : {
        "name" : "roomname",
        "in" : "query",
        "description" : "Every site (building) has a name. In some cases this is contained in the roomname as well.",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "roomid" : {
        "name" : "roomid",
        "in" : "query",
        "description" : "The room ID (not to be confused with the roomname).",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "siteid" : {
        "name" : "siteid",
        "in" : "query",
        "description" : "Every room is inside a site (building). All sites have IDs.",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "sitename" : {
        "name" : "sitename",
        "in" : "query",
        "description" : "Every site (building) has a name. In some cases this is contained in the roomname as well.",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "classification" : {
        "name" : "classification",
        "in" : "query",
        "description" : "The room type ID",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "capacity" : {
        "name" : "capacity",
        "in" : "query",
        "description" : "Every room has a set capacity of how many people can fit inside it. When supplied, all rooms with the given capacity or greater will be returned.",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "start_datetime" : {
        "name" : "start_datetime",
        "in" : "query",
        "description" : "Start datetime of the booking. Returns bookings with a start_datetime after the one supplied. Follows the ISO 8601 formatting standard.",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "end_datetime" : {
        "name" : "end_datetime",
        "in" : "query",
        "description" : "End datetime of the booking. Returns bookings with an end_datetime before the one supplied. Follows the ISO 8601 formatting standard.",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "date" : {
        "name" : "date",
        "in" : "query",
        "description" : "Date of the bookings you need, in the format YYYYMMDD. Returns bookings occurring on this day. This query parameter is only considered when end_datetime and start_datetime are not supplied.",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "description" : {
        "name" : "description",
        "in" : "query",
        "description" : "Describes what the booking is. Could contain a module code (for example WIBRG005) or just the type of activity (for example Lecture).",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "contact" : {
        "name" : "contact",
        "in" : "query",
        "description" : "The name of the person who made the booking. Substrings of the contact name can be used, Queries for Mark will include Mark Herbster. Sometimes, a society or student group may be the contact for a booking.",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "results_per_page" : {
        "name" : "results_per_page",
        "in" : "query",
        "description" : "Number of bookings returned per page. Maximum allowed value is 1000. Defaults to 1000.",
        "required" : false,
        "schema" : {
          "type" : "number"
        }
      },
      "survey_id" : {
        "name" : "survey_id",
        "in" : "query",
        "description" : "Provides a list of every sensor within every map in a survey/library. It can optionally provide the current state of a sensor (e.g. Occupied / Absent), but by default it will only list the sensors without their states.",
        "required" : true,
        "schema" : {
          "type" : "number"
        }
      },
      "survey_ids" : {
        "name" : "survey_ids",
        "in" : "query",
        "description" : "A comma delimited list of Survey IDs. If this parameter is not supplied, historical data for every survey is returned.",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "survey_filter" : {
        "name" : "survey_filter",
        "in" : "query",
        "description" : "Filter the surveys based on who they are designed for. Valid values of this parameter are `all` (no filtering), `student` (return only student surveys; this is the default) and `staff` (return only surveys representing work areas for UCL staff only). It is recommended that the default (student) is used in apps aimed at students, unless a specific reason to include a staff workspace is required.",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "schemas" : {
      "user_data" : {
        "properties" : {
          "ok" : {
            "type" : "boolean"
          },
          "email" : {
            "type" : "string"
          },
          "full_name" : {
            "type" : "string"
          },
          "department" : {
            "type" : "string"
          },
          "cn" : {
            "type" : "string"
          },
          "given_name" : {
            "type" : "string"
          },
          "upi" : {
            "type" : "string"
          },
          "scope_number" : {
            "type" : "number"
          },
          "is_student" : {
            "type" : "boolean"
          }
        }
      },
      "event" : {
        "properties" : {
          "location" : {
            "$ref" : "#/components/schemas/location"
          },
          "module" : {
            "$ref" : "#/components/schemas/module"
          },
          "start_time" : {
            "type" : "string"
          },
          "end_time" : {
            "type" : "string"
          },
          "duration" : {
            "type" : "integer",
            "format" : "int64"
          },
          "session_type" : {
            "type" : "string"
          },
          "session_type_str" : {
            "type" : "string"
          },
          "session_group" : {
            "type" : "string"
          },
          "session_title" : {
            "type" : "string"
          },
          "contact" : {
            "type" : "string"
          }
        }
      },
      "module" : {
        "properties" : {
          "lecturer" : {
            "$ref" : "#/components/schemas/lecturer"
          },
          "module_id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "department_id" : {
            "type" : "string"
          },
          "department_name" : {
            "type" : "string"
          }
        }
      },
      "module_data_courses_modules" : {
        "properties" : {
          "module_id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "instances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/instance"
            }
          }
        }
      },
      "instance" : {
        "properties" : {
          "full_module_id" : {
            "type" : "string"
          },
          "class_size" : {
            "type" : "number"
          },
          "delivery" : {
            "$ref" : "#/components/schemas/delivery"
          },
          "periods" : {
            "$ref" : "#/components/schemas/period"
          },
          "instance_code" : {
            "type" : "string"
          }
        }
      },
      "delivery" : {
        "properties" : {
          "fheq_level" : {
            "type" : "number"
          },
          "is_undergraduate" : {
            "type" : "boolean"
          },
          "student_type" : {
            "type" : "string"
          }
        }
      },
      "period" : {
        "properties" : {
          "teaching_periods" : {
            "$ref" : "#/components/schemas/teaching_periods"
          },
          "year_long" : {
            "type" : "boolean"
          },
          "lsr" : {
            "type" : "boolean"
          },
          "summer_school" : {
            "$ref" : "#/components/schemas/summer_school"
          }
        }
      },
      "teaching_periods" : {
        "properties" : {
          "term_1" : {
            "type" : "boolean"
          },
          "term_2" : {
            "type" : "boolean"
          },
          "term_3" : {
            "type" : "boolean"
          },
          "term_1_next_year" : {
            "type" : "boolean"
          },
          "summer" : {
            "type" : "boolean"
          }
        }
      },
      "summer_school" : {
        "properties" : {
          "is_summer_school" : {
            "type" : "boolean"
          },
          "sessions" : {
            "type" : "object",
            "properties" : {
              "session_1" : {
                "type" : "boolean"
              },
              "session_2" : {
                "type" : "boolean"
              }
            }
          }
        }
      },
      "lecturer" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "department_name" : {
            "type" : "string"
          },
          "department_id" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          }
        }
      },
      "location" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "address" : {
            "type" : "array",
            "minItems" : 4,
            "maxItems" : 4,
            "items" : {
              "type" : "string"
            }
          },
          "site_name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "capacity" : {
            "type" : "integer",
            "format" : "int64"
          },
          "coordinates" : {
            "type" : "object",
            "properties" : {
              "lat" : {
                "type" : "number"
              },
              "lng" : {
                "type" : "number"
              }
            }
          }
        }
      },
      "department" : {
        "properties" : {
          "department_id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "course" : {
        "properties" : {
          "course_name" : {
            "type" : "string"
          },
          "course_id" : {
            "type" : "string"
          },
          "years" : {
            "type" : "number"
          }
        }
      },
      "room" : {
        "properties" : {
          "roomname" : {
            "type" : "string"
          },
          "roomid" : {
            "type" : "string"
          },
          "siteid" : {
            "type" : "string"
          },
          "sitename" : {
            "type" : "string"
          },
          "capacity" : {
            "type" : "string"
          },
          "classification" : {
            "type" : "string"
          },
          "classification_name" : {
            "type" : "string"
          },
          "automated" : {
            "type" : "string"
          },
          "location" : {
            "type" : "object",
            "properties" : {
              "address" : {
                "type" : "array",
                "minItems" : 4,
                "maxItems" : 4,
                "items" : {
                  "type" : "string"
                }
              },
              "coordinates" : {
                "type" : "object",
                "properties" : {
                  "lat" : {
                    "type" : "number"
                  },
                  "lng" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        }
      },
      "booking" : {
        "properties" : {
          "slotid" : {
            "type" : "number"
          },
          "end_time" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "roomname" : {
            "type" : "string"
          },
          "siteid" : {
            "type" : "number"
          },
          "contact" : {
            "type" : "string"
          },
          "weeknumber" : {
            "type" : "number"
          },
          "roomid" : {
            "type" : "number"
          },
          "start_time" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "number"
          }
        }
      },
      "equipment" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "units" : {
            "type" : "number"
          }
        }
      },
      "person" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "department" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          }
        }
      },
      "desktop_data" : {
        "properties" : {
          "room_status" : {
            "type" : "string"
          },
          "total_seats" : {
            "type" : "number"
          },
          "location" : {
            "type" : "object",
            "properties" : {
              "latitude" : {
                "type" : "number"
              },
              "room_id" : {
                "type" : "string"
              },
              "postcode" : {
                "type" : "string"
              },
              "address" : {
                "type" : "string"
              },
              "room_name" : {
                "type" : "string"
              },
              "building_name" : {
                "type" : "string"
              },
              "longitude" : {
                "type" : "number"
              }
            }
          },
          "free_seats" : {
            "type" : "number"
          }
        }
      },
      "survey" : {
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "name" : {
            "type" : "string"
          },
          "start_time" : {
            "type" : "string"
          },
          "end_time" : {
            "type" : "string"
          },
          "staff_survey" : {
            "type" : "number"
          },
          "maps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/map"
            }
          },
          "location" : {
            "type" : "object",
            "properties" : {
              "latitude" : {
                "type" : "number"
              },
              "room_id" : {
                "type" : "string"
              },
              "postcode" : {
                "type" : "string"
              },
              "address" : {
                "type" : "string"
              },
              "room_name" : {
                "type" : "string"
              },
              "building_name" : {
                "type" : "string"
              },
              "longitude" : {
                "type" : "number"
              }
            }
          }
        }
      },
      "map" : {
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "name" : {
            "type" : "string"
          },
          "image_id" : {
            "type" : "number"
          }
        }
      },
      "map_with_sensors" : {
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "name" : {
            "type" : "string"
          },
          "image_id" : {
            "type" : "number"
          },
          "sensors" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/sensor"
            }
          }
        }
      },
      "sensor" : {
        "properties" : {
          "description_2" : {
            "type" : "string"
          },
          "floor" : {
            "type" : "string"
          },
          "y_pos" : {
            "type" : "number"
          },
          "description_3" : {
            "type" : "string"
          },
          "device_type" : {
            "type" : "string"
          },
          "host_address" : {
            "type" : "string"
          },
          "building_name" : {
            "type" : "string"
          },
          "room_description" : {
            "type" : "string"
          },
          "last_trigger_type" : {
            "type" : "string"
          },
          "survey_id" : {
            "type" : "number"
          },
          "room_type" : {
            "type" : "string"
          },
          "room_name" : {
            "type" : "string"
          },
          "room_id" : {
            "type" : "number"
          },
          "location" : {
            "type" : "string"
          },
          "survey_device_id" : {
            "type" : "string"
          },
          "share_id" : {
            "type" : "string"
          },
          "x_pos" : {
            "type" : "number"
          },
          "description_1" : {
            "type" : "string"
          },
          "hardware_id" : {
            "type" : "number"
          },
          "pir_address" : {
            "type" : "string"
          },
          "last_trigger_timestamp" : {
            "type" : "string"
          },
          "occupied" : {
            "type" : "boolean"
          }
        }
      },
      "historical_survey" : {
        "properties" : {
          "survey_id" : {
            "type" : "number"
          },
          "name" : {
            "type" : "string"
          },
          "averages" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/average"
            }
          }
        }
      },
      "average" : {
        "properties" : {
          "sensors_absent" : {
            "type" : "number"
          },
          "sensors_total" : {
            "type" : "number"
          },
          "sensors_occupied" : {
            "type" : "number"
          }
        }
      },
      "average_with_name_and_id" : {
        "properties" : {
          "sensors_absent" : {
            "type" : "number"
          },
          "sensors_total" : {
            "type" : "number"
          },
          "sensors_occupied" : {
            "type" : "number"
          },
          "name" : {
            "type" : "string"
          },
          "id" : {
            "type" : "number"
          }
        }
      },
      "survey_with_maps" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "type" : "number"
          },
          "sensors_absent" : {
            "type" : "number"
          },
          "sensors_total" : {
            "type" : "number"
          },
          "sensors_occupied" : {
            "type" : "number"
          },
          "maps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/average_with_name_and_id"
            }
          }
        }
      },
      "svg" : {
        "type" : "object",
        "properties" : {
          "xmlns:ev" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "xmlns:xlink" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "xmlns" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "g" : {
            "type" : "object",
            "properties" : {
              "transform" : {
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "image" : {
                "type" : "object",
                "properties" : {
                  "width" : {
                    "type" : "string",
                    "xml" : {
                      "attribute" : true
                    }
                  },
                  "height" : {
                    "type" : "string",
                    "xml" : {
                      "attribute" : true
                    }
                  },
                  "xlink:href" : {
                    "type" : "string",
                    "xml" : {
                      "attribute" : true
                    }
                  },
                  "g" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/seat_image"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "seat_image" : {
        "type" : "object",
        "properties" : {
          "transform" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            }
          },
          "circle" : {
            "type" : "object",
            "properties" : {
              "r" : {
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "fill" : {
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              }
            }
          }
        }
      }
    },
    "responses" : {
      "NotFound" : {
        "description" : "Entity not found."
      },
      "IllegalInput" : {
        "description" : "Illegal input for operation."
      }
    },
    "securitySchemes" : {
      "token" : {
        "type" : "apiKey",
        "name" : "token",
        "in" : "query"
      },
      "OAuthSecurity" : {
        "type" : "oauth2",
        "description" : "This API uses OAuth2 with the implicit grant flow. [More info](https://uclapi.com/docs#OAuthSecurity)",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "/authorise",
            "tokenUrl" : "/token",
            "scopes" : {
              "personal_timetable" : "read user's timetable",
              "student_number" : "read user's student number"
            }
          }
        }
      }
    }
  },
  "paths" : {
    "/timetable/personal" : {
      "get" : {
        "summary" : "Returns the personal timetable of the user.",
        "security" : [ {
          "OAuthSecurity" : [ "personal_timetable" ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/token"
        }, {
          "$ref" : "#/components/parameters/client_secret"
        } ],
        "responses" : {
          "200" : {
            "description" : "A timetable.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "timetable" : {
                      "type" : "object",
                      "properties" : {
                        "date" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/event"
                          }
                        }
                      }
                    },
                    "ok" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/timetable/bymodule" : {
      "get" : {
        "summary" : "Returns a yearly timetable for the supplied modules.",
        "security" : [ {
          "OAuthSecurity" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/token"
        }, {
          "name" : "modules",
          "in" : "query",
          "description" : "A  comma-separated list of the module codes you want the timetable of. You can supply either standard module codes (e.g. COMP0133), or full codes including the instance of the module (COMP0133-A7U-T1). Note that if you do not supply an instance, every single timetable entry will be returned including duplicates for the same module taught as multiple instances. It is recommended that a full module code including instance be supplied, COMP0030,COMP0133-A7U-T1.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A timetable.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "timetable" : {
                      "type" : "object",
                      "properties" : {
                        "date" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/event"
                          }
                        }
                      }
                    },
                    "ok" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/timetable/data/departments" : {
      "get" : {
        "summary" : "Returns a list of every department at UCL, along with its internal name. This can be used with the /data/modules endpoint to request information on all modules for a department.",
        "security" : [ {
          "OAuthSecurity" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/token"
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of department objects.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ok" : {
                      "type" : "boolean"
                    },
                    "departments" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/department"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/timetable/data/modules" : {
      "get" : {
        "summary" : "Returns a list of every module taught by a given department at UCL.",
        "security" : [ {
          "OAuthSecurity" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/token"
        }, {
          "name" : "department",
          "in" : "query",
          "description" : "The department ID available from /data/departments.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of department objects.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ok" : {
                      "type" : "boolean"
                    },
                    "modules" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "$ref" : "#/components/schemas/module_data_courses_modules"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/timetable/data/courses" : {
      "get" : {
        "summary" : "Returns a list of every course taught by a given department at UCL.",
        "security" : [ {
          "OAuthSecurity" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/token"
        }, {
          "name" : "department",
          "in" : "query",
          "description" : "The department ID available from /data/departments.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of department objects.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ok" : {
                      "type" : "boolean"
                    },
                    "courses" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/course"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/timetable/data/courses/modules" : {
      "get" : {
        "summary" : "Returns a list of every module taught on a given course at UCL.",
        "security" : [ {
          "OAuthSecurity" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/token"
        }, {
          "name" : "course",
          "in" : "query",
          "description" : "The course ID available from /data/courses.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "term_1",
          "in" : "query",
          "description" : "Boolean designating if you would like module instances that are taught in term 1.",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "term_2",
          "in" : "query",
          "description" : "Boolean designating if you would like module instances that are taught in term 2.",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "term_3",
          "in" : "query",
          "description" : "Boolean designating whether or not you want module instances that are taught in term 3.",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "term_1_next_year",
          "in" : "query",
          "description" : "Boolean designating if you would like module instances that are taught in term 1 of the next academic year. This is used by admissions to calculate the end dates for non-standard programmes, and therefore is rare",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "summer",
          "in" : "query",
          "description" : "Boolean designating if you would like module instances that are timetabled in the summer. This can happen in some Postgraduate and Medicine teaching arrangements, but is rare. Note that this is NOT the same as the UCL Summer School.",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "year_long",
          "in" : "query",
          "description" : "Boolean designating if you would like module instances where the course is timetabled to last for an entire academic year.",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "lsr",
          "in" : "query",
          "description" : "Boolean designating if you would like module instances where the module is timetabled during the Late Summer Resit period. This is used internally by Examinations to timetable Late Summer Assessments (LSAs).",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "is_summer_school",
          "in" : "query",
          "description" : "Boolean designating if you would like module instances where the course is taught as part of the UCL Summer School (true) or standard academic teaching (false).",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "session_1",
          "in" : "query",
          "description" : "Boolean designating if you would like module instances where the module is taught in the first summer school session of this academic year's summer.",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "session_2",
          "in" : "query",
          "description" : "Boolean designating if you would like module instances where the module is taught in the second summer school session of this academic year's summer.",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "is_undergraduate",
          "in" : "query",
          "description" : "Boolean designating if you would like undergraduate module instances.",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "only_available",
          "in" : "query",
          "description" : "Boolean designating if you would only like available module instances (i.e. ones that are not compulsory for the course).",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "only_compulsory",
          "in" : "query",
          "description" : "Boolean designating if you would only like compulsory module instances.",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of department objects.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ok" : {
                      "type" : "boolean"
                    },
                    "modules" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "$ref" : "#/components/schemas/module_data_courses_modules"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/oauth/token" : {
      "get" : {
        "summary" : "A token will be generated which your app can use to get user’s personal data in JSON format from the OAuthSecurity/user/data.",
        "security" : [ {
          "OAuthSecurity" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/client_secret"
        }, {
          "name" : "client_id",
          "in" : "query",
          "description" : "Client ID of the authenticating app.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "query",
          "description" : "Secret code obtained from the authorise endpoint.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ok" : {
                      "type" : "boolean"
                    },
                    "state" : {
                      "type" : "string"
                    },
                    "scope" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "client_id" : {
                      "type" : "string"
                    },
                    "token" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/oauth/user/data" : {
      "get" : {
        "summary" : "Returns personal data on a student at UCL.",
        "security" : [ {
          "OAuthSecurity" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/client_secret"
        }, {
          "name" : "token",
          "in" : "query",
          "description" : "OAuth user token.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user_data"
                }
              }
            }
          }
        }
      }
    },
    "/oauth/user/studentnumber" : {
      "get" : {
        "summary" : "You can use the oauth/user/data endpoint to find out whether the user is a student before you call this endpoint. If you call this endpoint and the user is not a student, an error will be returned.",
        "security" : [ {
          "OAuthSecurity" : [ "student_number" ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/token"
        }, {
          "$ref" : "#/components/parameters/client_secret"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ok" : {
                      "type" : "boolean"
                    },
                    "student_number" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roombookings/rooms" : {
      "get" : {
        "summary" : "Returns rooms and information about them. If you don’t specify any query parameters besides the token, all rooms will be returned.",
        "security" : [ {
          "OAuthSecurity" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/token"
        }, {
          "$ref" : "#/components/parameters/roomname"
        }, {
          "$ref" : "#/components/parameters/roomid"
        }, {
          "$ref" : "#/components/parameters/siteid"
        }, {
          "$ref" : "#/components/parameters/sitename"
        }, {
          "$ref" : "#/components/parameters/classification"
        }, {
          "$ref" : "#/components/parameters/capacity"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ok" : {
                      "type" : "boolean"
                    },
                    "rooms" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/room"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roombookings/bookings" : {
      "get" : {
        "summary" : "Returns the results to a bookings or space availability query. It returns a paginated list of bookings. Note that this endpoint only returns publicly displayed bookings. Departmental bookings are not included.",
        "security" : [ {
          "OAuthSecurity" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/token"
        }, {
          "$ref" : "#/components/parameters/roomname"
        }, {
          "$ref" : "#/components/parameters/roomid"
        }, {
          "$ref" : "#/components/parameters/start_datetime"
        }, {
          "$ref" : "#/components/parameters/end_datetime"
        }, {
          "$ref" : "#/components/parameters/date"
        }, {
          "$ref" : "#/components/parameters/siteid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ok" : {
                      "type" : "boolean"
                    },
                    "next_page_exists" : {
                      "type" : "boolean"
                    },
                    "page_token" : {
                      "type" : "string"
                    },
                    "count" : {
                      "type" : "number"
                    },
                    "bookings" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/booking"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roombookings/equipment" : {
      "get" : {
        "summary" : "Returns any equipment/feature information about a specific room. So, for example whether there is a Whiteboard or a DVD Player in the room. A full example can be seen here.",
        "security" : [ {
          "OAuthSecurity" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/token"
        }, {
          "name" : "roomid",
          "in" : "query",
          "description" : "The room ID (not to be confused with the roomname).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "siteid",
          "in" : "query",
          "description" : "Every room is inside a site (building). All sites have IDs.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ok" : {
                      "type" : "boolean"
                    },
                    "equipment" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/equipment"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roombookings/freerooms" : {
      "get" : {
        "summary" : "Given a start time and an end time, this endpoint returns all rooms which are free in that time range.",
        "security" : [ {
          "OAuthSecurity" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/token"
        }, {
          "name" : "start_datetime",
          "in" : "query",
          "description" : "Start datetime of the booking. Returns bookings with a start_datetime after the one supplied. Follows the ISO 8601 formatting standard.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "end_datetime",
          "in" : "query",
          "description" : "End datetime of the booking. Returns bookings with an end_datetime before the one supplied. Follows the ISO 8601 formatting standard.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ok" : {
                      "type" : "boolean"
                    },
                    "free_rooms" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/room"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search/people" : {
      "get" : {
        "summary" : "Returns matching people and information about them.",
        "security" : [ {
          "OAuthSecurity" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/token"
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Name of the person you are searching for.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ok" : {
                      "type" : "boolean"
                    },
                    "people" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/person"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resources/desktops" : {
      "get" : {
        "summary" : "Returns number of desktops and how many are free at the time of making the request.",
        "security" : [ {
          "OAuthSecurity" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/token"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ok" : {
                      "type" : "boolean"
                    },
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/desktop_data"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/surveys" : {
      "get" : {
        "summary" : "Returns all UCL libraries with the Cad-Capture devices fitted to the seats. Each library is known as a 'survey', as it is a survey of the building. Within each survey there are multiple 'maps', each of which corresponds to a section such as a level, wing or separated library work area. Each sensor is tied to a specific map, and each map belongs to a survey.",
        "security" : [ {
          "OAuthSecurity" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/token"
        }, {
          "name" : "survey_filter",
          "in" : "query",
          "description" : "Filter the surveys based on who they are designed for. Valid values of this parameter are `all` (no filtering), `student` (return only student surveys; this is the default) and `staff` (return only surveys representing work areas for UCL staff only). It is recommended that the default (student) is used in apps aimed at students, unless a specific reason to include a staff workspace is required.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ok" : {
                      "type" : "boolean"
                    },
                    "surveys" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/survey"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/sensors" : {
      "get" : {
        "summary" : "Provides a list of every sensor within every map in a survey/library. It can optionally provide the current state of a sensor (e.g. Occupied / Absent), but by default it will only list the sensors without their states",
        "security" : [ {
          "OAuthSecurity" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/token"
        }, {
          "$ref" : "#/components/parameters/survey_id"
        }, {
          "name" : "return_states",
          "in" : "query",
          "description" : "Whether or not to return the latest trigger state of each sensor. Defaults to false. For live data, set this to true.",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "survey_id" : {
                      "type" : "number"
                    },
                    "maps" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/map_with_sensors"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/sensors/averages/time" : {
      "get" : {
        "summary" : "Provides a list of every sensor within every map in a survey/library. It can optionally provide the current state of a sensor (e.g. Occupied / Absent), but by default it will only list the sensors without their states",
        "security" : [ {
          "OAuthSecurity" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/token"
        }, {
          "name" : "days",
          "in" : "query",
          "description" : "An integer number of days (either 1, 7 or 30) from which to deliver average data. The format of the data returned does not change based on this value, but the actual averaged figures do. When days is 1, the API will return the data from the previous complete day; when days is 7 the API will return data from the last week and when it is set to 30 the API will return data from the last 30 days, which is approx. one month.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/survey_ids"
        }, {
          "$ref" : "#/components/parameters/survey_filter"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ok" : {
                      "type" : "boolean"
                    },
                    "surveys" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/historical_survey"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/sensors/lastupdated" : {
      "get" : {
        "summary" : "Replies with the timestamp of the last time the sensor data was updated for a given survey. This allows integrations that poll the API to save on request time by only requesting the full set of sensor information for a survey once it has been updated.",
        "security" : [ {
          "OAuthSecurity" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/token"
        }, {
          "$ref" : "#/components/parameters/survey_id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ok" : {
                      "type" : "boolean"
                    },
                    "last_updated" : {
                      "type" : "string"
                    },
                    "survey_id" : {
                      "type" : "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/sensors/summary" : {
      "get" : {
        "summary" : "This endpoint summarises, with a one-minute accuracy, the number of seats within each library region that are free and occupied. It is best suited to integrations which show cumulative, live data. Developers can use this endpoint to avoid making many parallel or sequential requests to fetch survey sensor counts.\nThis endpoint takes into account UCL's thirty minute rule, which allows students to leave their seat unattended for up to thirty minutes at a time (e.g. to use the bathroom or get food). This means that the Summary endpoint may return a lower number of available seats when compared to reality if many students leave the library within a short period of time. The UCL Library's website and the UCL Go! mobile application both follow this rule, so your app or integration should have parity with first party data sources by using the UCL API.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/token"
        }, {
          "$ref" : "#/components/parameters/survey_ids"
        }, {
          "$ref" : "#/components/parameters/survey_filter"
        } ],
        "security" : [ {
          "OAuthSecurity" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ok" : {
                      "type" : "boolean"
                    },
                    "surveys" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/survey_with_maps"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/images/map" : {
      "get" : {
        "summary" : "Returns the image specified by the passed in image_id. Image IDs are provided by the /workspaces/surveys endpoint within the array of maps. Each map has an image.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/token"
        }, {
          "name" : "image_id",
          "in" : "query",
          "description" : "The ID of the image to obtain.",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "image_format",
          "in" : "query",
          "description" : "The format of the response. This can either be base64, which returns a JSON object as shown in the example, or raw which will respond with a raw image. In the case of a raw image, the Content-Type header will define the data type, such as image/png.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "security" : [ {
          "OAuthSecurity" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ok" : {
                      "type" : "boolean"
                    },
                    "content_type" : {
                      "type" : "string"
                    },
                    "data" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/images/map/live" : {
      "get" : {
        "summary" : "Takes Survey ID and Map ID as parameters and displays a dynamically generated SVG map, correct as of the time of the API call (aside from caching overhead), showing the map's plan image with a circle overlaid on each seat. This circle is coloured based on whether the seat is occupied or absent (e.g. it's free).",
        "parameters" : [ {
          "$ref" : "#/components/parameters/token"
        }, {
          "$ref" : "#/components/parameters/survey_id"
        }, {
          "name" : "map_id",
          "in" : "query",
          "description" : "The ID of the library's survey which contains the map you want to obtain.",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "image_scale",
          "in" : "query",
          "description" : "The SVG image's scale. The default is 0.02. The scale is implemented as an SVG transform scale, and is applied to both the x and the y axes of the image.",
          "required" : false,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "circle_radius",
          "in" : "query",
          "description" : "The size of the circle. This must be a positive float value. The default is 128.",
          "required" : false,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "absent_colour",
          "in" : "query",
          "description" : "TThe colour of the circle designating a free seat. This must be provided as a hex colour code, including the preceeding",
          "required" : false,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "occupied_colour",
          "in" : "query",
          "description" : "The colour of the circle designating a taken, or occupied, seat. This must be provided as a hex colour code, including the preceeding",
          "required" : false,
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/svg"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers" : [ {
    "url" : "https://uclapi.com",
    "description" : "Deployment server"
  }, {
    "url" : "https://staging.ninja",
    "description" : "Staging server"
  } ]
}